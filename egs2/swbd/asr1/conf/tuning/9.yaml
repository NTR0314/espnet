encoder: conformer
encoder_conf:
    output_size: 256
    attention_heads: 4
    linear_units: 1024
    num_blocks: 12
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    attention_dropout_rate: 0.1
    input_layer: conv2d
    normalize_before: true
    macaron_style: true
    rel_pos_type: latest
    pos_enc_layer_type: abs_pos
    selfattention_layer_type: selfattn
    activation_type: swish
    use_cnn_module: true
    cnn_module_kernel: 31

decoder: transformer
decoder_conf:
    attention_heads: 4
    linear_units: 2048
    num_blocks: 6
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    self_attention_dropout_rate: 0.1
    src_attention_dropout_rate: 0.1

model_conf:
    ctc_weight: 0.3
    distill_weight: 0.02
    lsm_weight: 0.1
    length_normalized_loss: false

ctc_conf:
    ignore_nan_grad: true

frontend_conf:
    n_fft: 512
    win_length: 400
    hop_length: 160

seed: 2022
log_interval: 400
num_att_plot: 0
num_workers: 4
sort_in_batch: descending       # how to sort data in making batch
sort_batch: descending          # how to sort created batches
batch_type: numel
# 6 GPUs == 32.000.00
# batch_bins: 4000000
batch_bins: 32000000
# 6 GPUs == 2
#accum_grad: 16
accum_grad: 2
max_epoch: 70
patience: none
init: none
best_model_criterion:
-   - valid
    - acc
    - max
keep_nbest_models: 10

use_amp: true
cudnn_deterministic: false
cudnn_benchmark: false

optim: adam
optim_conf:
    lr: 0.002
    weight_decay: 0.000001
scheduler: warmuplr
# [Yosuke]: Muss evtl erhÃ¶hen. -> 50.000 in default recipe hier
scheduler_conf:
    warmup_steps: 50000

specaug: specaug
specaug_conf:
    apply_time_warp: true
    time_warp_window: 5
    time_warp_mode: bicubic
    apply_freq_mask: true
    freq_mask_width_range:
    - 0
    - 27
    num_freq_mask: 2
    apply_time_mask: true
    time_mask_width_ratio_range:
    - 0.
    - 0.05
    num_time_mask: 5


# 1 block := 10 ms interval. Because it is done before conv of Conformer.
blocks_training: 75

# +-[0, 450ms] added/substracted pos.encoding only.
# TODO check what my implementation does if susbtract > masked audio (I think i sample between [0, 450] 
random_blocks: 50
# For both blocks_training and random_blocks
uniform_sampling: true

# If encoder should have causal attention
is_causal: true

# OSWALD: Self distilling attention loss
is_self_distilling: true
use_last_head_distill: true

# OSWALD: Must be used together. No time to create ChoiceClass
use_timing_loss: false
only_last_timing: true
use_single_head: true
only_last_layer_timing: true
timing_loss_weight: 0
